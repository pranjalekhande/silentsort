name: 🚀 Release & Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 📝 Generate release notes
        id: release_notes
        run: |
          # Generate changelog from git commits
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate release notes
          cat > RELEASE_NOTES.md << EOF
          # SilentSort $VERSION
          
          ## 🎉 What's New
          $(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD | grep -E "(feat|fix|perf):" | head -10)
          
          ## 🐛 Bug Fixes
          $(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD | grep "fix:" | head -5)
          
          ## 📦 Installation
          
          ### macOS
          - Download \`SilentSort-$VERSION.dmg\`
          - Open the DMG and drag SilentSort to Applications
          - First launch: Right-click → Open to bypass Gatekeeper
          
          ### Windows
          - Download \`SilentSort-Setup-$VERSION.exe\`
          - Run the installer as Administrator
          - Windows Defender SmartScreen: Click "More info" → "Run anyway"
          
          ### Linux
          - Download \`SilentSort-$VERSION.AppImage\`
          - Make executable: \`chmod +x SilentSort-$VERSION.AppImage\`
          - Run: \`./SilentSort-$VERSION.AppImage\`
          
          ## 🔧 Requirements
          - macOS 12.0+ (Monterey) or Windows 10+ or Linux (Ubuntu 20.04+)
          - 4GB RAM minimum
          - 100MB disk space
          - OpenAI API key for AI features
          
          ## 📚 Documentation
          - [User Guide](https://github.com/pranjalekhande/silentsort/wiki)
          - [API Documentation](https://github.com/pranjalekhande/silentsort/docs)
          - [Troubleshooting](https://github.com/pranjalekhande/silentsort/wiki/Troubleshooting)
          EOF
          
      - name: 🏷️ Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_notes.outputs.version }}
          release_name: SilentSort ${{ steps.release_notes.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ contains(steps.release_notes.outputs.version, 'beta') || contains(steps.release_notes.outputs.version, 'alpha') }}

  build-and-release:
    name: Build & Upload ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: create-release
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: darwin
            ext: dmg
          - os: windows-latest
            platform: win32
            ext: exe
          - os: ubuntu-latest
            platform: linux
            ext: AppImage
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build and package
        run: |
          cd apps/desktop
          npm run build
          npm run package:${{ matrix.platform }}
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Code signing certificates
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          
      - name: 📤 Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: apps/desktop/dist/SilentSort-*.${{ matrix.ext }}
          asset_name: SilentSort-${{ github.ref_name }}-${{ matrix.platform }}.${{ matrix.ext }}
          asset_content_type: application/octet-stream

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-and-release]
    if: always()
    
    steps:
      - name: 📢 Notify on success
        if: needs.build-and-release.result == 'success'
        run: |
          echo "🎉 Release ${{ github.ref_name }} completed successfully!"
          echo "📦 Assets uploaded to: ${{ needs.create-release.outputs.upload_url }}"
          
      - name: 🚨 Notify on failure
        if: needs.build-and-release.result == 'failure'
        run: |
          echo "❌ Release ${{ github.ref_name }} failed!"
          exit 1 