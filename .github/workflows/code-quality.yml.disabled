name: 🔍 Code Quality & Security

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'package*.json'
      - '**/package*.json'

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, ISC

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔒 Run npm audit
        run: |
          npm audit --audit-level=moderate
          npm audit --json > audit-results.json || true
          
      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
          
      - name: 🔍 CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          
      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  performance-check:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: ⚡ Bundle size check
        run: |
          cd apps/desktop
          npm run build
          npm run analyze:bundle || true
          
      - name: 📊 Performance benchmarks
        run: npm run benchmark || true
        
      - name: 📈 Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-results.json
          retention-days: 30

  dependency-update:
    name: Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 🔄 Update dependencies
        run: |
          npx npm-check-updates -u
          npm install
          
      - name: 🧪 Test with updated dependencies
        run: npm test
        
      - name: 📝 Create PR for dependency updates
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '🔄 Update dependencies'
          title: '🔄 Weekly dependency updates'
          body: |
            ## 📦 Dependency Updates
            
            This PR contains weekly dependency updates generated automatically.
            
            ### Changes
            - Updated all dependencies to latest compatible versions
            - All tests passing
            - No breaking changes detected
            
            ### Review Checklist
            - [ ] Check for any breaking changes in changelogs
            - [ ] Verify app builds and runs correctly
            - [ ] Test core functionality
            
            **Auto-generated by GitHub Actions**
          branch: dependency-updates
          delete-branch: true

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests with coverage
        run: npm run test:coverage
        
      - name: 📊 Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false 